/* testing testing testing
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ipcalcgui;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

/**
 *
 * @author usirp
 */
public class IP_Input extends javax.swing.JFrame {

    /**
     * Creates new form IP_Input
     */
    public IP_Input() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        IP_One = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        IP_Two = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        IP_Three = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        IP_Four = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        NM_One = new javax.swing.JTextField();
        NM_Two = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        NM_Three = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        NM_Four = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        NM_Bits = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        Hosts = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        Networks = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("IP Address Input");

        jLabel1.setText("Input IP Address:");

        jLabel2.setText(".");

        jLabel3.setText(".");

        jLabel4.setText(".");

        jButton1.setText("Close");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jLabel5.setText("Input Netmask:");

        jLabel6.setText(".");

        jLabel7.setText(".");

        jLabel8.setText(".");

        jLabel9.setText("or");

        jLabel10.setText("/");

        jButton2.setText("Calculate Networks");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jButton3.setText("Save");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        jLabel11.setText("Hosts:");

        jLabel12.setText("Networks:");

        jButton4.setText("Load");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTextField1.setText("jTextField1");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Load(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(IP_One, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(IP_Two, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(IP_Three, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(IP_Four, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel5)
                            .addComponent(jLabel9)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(NM_Bits, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(99, 99, 99)
                                .addComponent(jTextField1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(18, 18, 18)
                                .addComponent(Networks, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(NM_One, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel6))
                                    .addComponent(jLabel11))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Hosts, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(NM_Two, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(NM_Three, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(NM_Four, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(0, 124, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IP_One, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(IP_Two, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(IP_Three, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(IP_Four, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NM_One, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(NM_Two, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(NM_Three, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(NM_Four, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(NM_Bits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Hosts, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(Networks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        dispose();
    }//GEN-LAST:event_jButton1MouseClicked

    private String[] IP_Array(){
         String[] IP_Array = new String[4];
         int[] IP_ArrayTemp = new int[4]; 
         int[] NM_Array = new int[4];
        int NM_Bits_Int = 0;
        IP_ArrayTemp[0] = Integer.parseInt(IP_One.getText());
        IP_ArrayTemp[1] = Integer.parseInt(IP_Two.getText());
        IP_ArrayTemp[2] = Integer.parseInt(IP_Three.getText());
        IP_ArrayTemp[3] = Integer.parseInt(IP_Four.getText());  
        String IP_Class = "";
        if(IP_ArrayTemp[0] >= 1 && IP_ArrayTemp[0] <= 126){
        IP_Class = "A";
        };        
        if(IP_ArrayTemp[0] >= 128 && IP_ArrayTemp[0] <= 191){
        IP_Class = "B";
        };
        if(IP_ArrayTemp[0] >= 192 && IP_ArrayTemp[0] <= 223){
        IP_Class = "C";
        };
        
        if(NM_Bits != null)
        {
        NM_Bits_Int = Integer.parseInt(NM_Bits.getText());
        }
        
        if(NM_Bits == null){
        NM_Array[0] = Integer.parseInt(NM_One.getText());
        NM_Array[1] = Integer.parseInt(NM_Two.getText());
        NM_Array[2] = Integer.parseInt(NM_Three.getText());
        NM_Array[3] = Integer.parseInt(NM_Four.getText());
        String temp_NM_One = "";
        String temp_NM_Two = "";
        String temp_NM_Three = "";
        String temp_NM_Four = "";
        
        for(int j = 0; j < 8; j++)
        {
            if(NM_Array[0] % 2 == 1)
            {
            temp_NM_One = '1' + temp_NM_One;
            }
            if(NM_Array[0] % 2 == 0)
            {
            temp_NM_One = '0' + temp_NM_One;
            }
            NM_Array[0] = NM_Array[0]/2;
        }
                for(int j = 0; j < 8; j++)
        {
            if(NM_Array[1] % 2 == 1)
            {
            temp_NM_Two = '1' + temp_NM_Two;
            }
            if(NM_Array[1] % 2 == 0)
            {
            temp_NM_Two = '0' + temp_NM_Two;
            }
            NM_Array[1] = NM_Array[1]/2;
        }
                for(int j = 0; j < 8; j++)
        {
            if(NM_Array[2] % 2 == 1)
            {
            temp_NM_Three = '1' + temp_NM_Three;
            }
            if(NM_Array[2] % 2 == 0)
            {
            temp_NM_Three = '0' + temp_NM_Three;
            }
            NM_Array[2] = NM_Array[2]/2;
        }        
                for(int j = 0; j < 8; j++)
        {
            if(NM_Array[3] % 2 == 1)
            {
                temp_NM_Four = '1' + temp_NM_Four;
            }
            if(NM_Array[3] % 2 == 0)
            {
                temp_NM_Four = '0' + temp_NM_Four;
            }
            NM_Array[3] = NM_Array[3]/2;
        }
        
            int NM_Bin_Array[] = new int[4];
            NM_Bin_Array[0] = Integer.parseInt(temp_NM_One);
            NM_Bin_Array[1] = Integer.parseInt(temp_NM_Two);
            NM_Bin_Array[2] = Integer.parseInt(temp_NM_Three);
            NM_Bin_Array[3] = Integer.parseInt(temp_NM_Four);
         
            if(NM_Bin_Array[0] >= 10000000)
            {
            NM_Bits_Int =+ 1;
            NM_Bin_Array[0] =- 10000000;
            }
            if(NM_Bin_Array[0] >= 1000000)
            {
            NM_Bits_Int =+ 1;
            NM_Bin_Array[0] =- 1000000;
            }  
            if(NM_Bin_Array[0] >= 100000)
            {
            NM_Bits_Int =+ 1;
            NM_Bin_Array[0] =- 100000;
            }
            if(NM_Bin_Array[0] >= 10000)
            {
            NM_Bits_Int =+ 1;
            NM_Bin_Array[0] =- 10000;
            }
            if(NM_Bin_Array[0] >= 1000)
            {
            NM_Bits_Int =+ 1;
            NM_Bin_Array[0] =- 1000;
            }
            if(NM_Bin_Array[0] >= 100)
            {
            NM_Bits_Int =+ 1;
            NM_Bin_Array[0] =- 100;
            }
            if(NM_Bin_Array[0] >= 10)
            {
            NM_Bits_Int =+ 1;
            NM_Bin_Array[0] =- 10;
            }
            if(NM_Bin_Array[0] >= 1)
            {
            NM_Bits_Int =+ 1;
            NM_Bin_Array[1] =- 1;
            }
            if(NM_Bin_Array[1] >= 10000000)
            {
            NM_Bits_Int =+ 1;
            NM_Bin_Array[1] =- 10000000;
            }
            if(NM_Bin_Array[1] >= 1000000)
            {
            NM_Bits_Int =+ 1;
            NM_Bin_Array[1] =- 1000000;
            }  
            if(NM_Bin_Array[1] >= 100000)
            {
            NM_Bits_Int =+ 1;
            NM_Bin_Array[1] =- 100000;
            }
            if(NM_Bin_Array[1] >= 10000)
            {
            NM_Bits_Int =+ 1;
            NM_Bin_Array[1] =- 10000;
            }
            if(NM_Bin_Array[1] >= 1000)
            {
            NM_Bits_Int =+ 1;
            NM_Bin_Array[1] =- 1000;
            }
            if(NM_Bin_Array[1] >= 100)
            {
            NM_Bits_Int =+ 1;
            NM_Bin_Array[1] =- 100;
            }
            if(NM_Bin_Array[1] >= 10)
            {
            NM_Bits_Int =+ 1;
            NM_Bin_Array[1] =- 10;
            }
            if(NM_Bin_Array[1] >= 1)
            {
            NM_Bits_Int =+ 1;
            NM_Bin_Array[1] =- 1;
            }
            if(NM_Bin_Array[2] >= 10000000)
            {
            NM_Bits_Int =+ 1;
            NM_Bin_Array[2] =- 10000000;
            }
            if(NM_Bin_Array[2] >= 1000000)
            {
            NM_Bits_Int =+ 1;
            NM_Bin_Array[2] =- 1000000;
            }  
            if(NM_Bin_Array[2] >= 100000)
            {
            NM_Bits_Int =+ 1;
            NM_Bin_Array[2] =- 100000;
            }
            if(NM_Bin_Array[2] >= 10000)
            {   
            NM_Bits_Int =+ 1;
            NM_Bin_Array[2] =- 10000;
            }
            if(NM_Bin_Array[2] >= 1000)
            {
            NM_Bits_Int =+ 1;
            NM_Bin_Array[2] =- 1000;
            }
            if(NM_Bin_Array[2] >= 100)
            {
            NM_Bits_Int =+ 1;
            NM_Bin_Array[2] =- 100;
            }
            if(NM_Bin_Array[2] >= 10)
            {
            NM_Bits_Int =+ 1;
            NM_Bin_Array[2] =- 10;
            }
            if(NM_Bin_Array[2] >= 1)
            {
            NM_Bits_Int =+ 1;
            NM_Bin_Array[2] =- 1;
            }
            if(NM_Bin_Array[3] >= 10000000)
            {
            NM_Bits_Int =+ 1;
            NM_Bin_Array[3] =- 10000000;
            }
            if(NM_Bin_Array[3] >= 1000000)
            {
            NM_Bits_Int =+ 1;
            NM_Bin_Array[3] =- 1000000;
            }  
            if(NM_Bin_Array[3] >= 100000)
            {
            NM_Bits_Int =+ 1;
            NM_Bin_Array[3] =- 100000;
            }
            if(NM_Bin_Array[3] >= 10000)
            {
            NM_Bits_Int =+ 1;
            NM_Bin_Array[3] =- 10000;
            }
            if(NM_Bin_Array[3] >= 1000)
            {
            NM_Bits_Int =+ 1;
            NM_Bin_Array[3] =- 1000;
            }
            if(NM_Bin_Array[3] >= 100)
            {
           NM_Bits_Int =+ 1;
            NM_Bin_Array[3] =- 100;
            }
            if(NM_Bin_Array[3] >= 10)
            {
           NM_Bits_Int =+ 1;
           NM_Bin_Array[3] =- 10;
            }
            if(NM_Bin_Array[3] >= 1)
            {
            NM_Bits_Int =+ 1;
            NM_Bin_Array[3] =- 1;
            }
        }
        if(NM_Bits_Int >= 8 && NM_Bits_Int <= 15 && IP_Class != "A")
        {
        ERROR frame = new ERROR();
        frame.setVisible(true);
        }
        if(NM_Bits_Int >= 16 && NM_Bits_Int <= 23 && IP_Class != "B")
        {
        ERROR frame = new ERROR();
        frame.setVisible(true);        
        }        
        if(NM_Bits_Int >= 24 && NM_Bits_Int <= 30 && IP_Class != "C")
        {
        ERROR frame = new ERROR();
        frame.setVisible(true);        
        }        
        
        IP_Array[0] = Integer.toString(IP_ArrayTemp[0]);
        IP_Array[1] = Integer.toString(IP_ArrayTemp[1]);
        IP_Array[2] = Integer.toString(IP_ArrayTemp[2]);
        IP_Array[3] = Integer.toString(IP_ArrayTemp[3]);
        return IP_Array;
    } 
    
    private static void SaveData(String[] IP_Array){
        File newFile = new File("C:/Users/Public/Documents/SavedData.txt");
        String IP_St = IP_Array[0] + IP_Array[1] + IP_Array[2] + IP_Array[3];
        try{
            newFile.createNewFile();
        }catch(IOException e1){
            e1.printStackTrace();
        }
        try
        {
            FileWriter fileW = new FileWriter(newFile);
            BufferedWriter buffW = new BufferedWriter(fileW);
            buffW.write(IP_St);
            buffW.close();

        }catch (Exception e)
        {
            e.printStackTrace();
        }
    }
    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
         String[] IP_Array = IP_Array();
        SaveData(IP_Array);
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
   IP_Array();
    }//GEN-LAST:event_jButton2MouseClicked

    private void Load(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Load
        String[] read;// TODO add your handling code here:
    }//GEN-LAST:event_Load

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IP_Input.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IP_Input.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IP_Input.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IP_Input.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IP_Input().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Hosts;
    private javax.swing.JTextField IP_Four;
    private javax.swing.JTextField IP_One;
    private javax.swing.JTextField IP_Three;
    private javax.swing.JTextField IP_Two;
    private javax.swing.JTextField NM_Bits;
    private javax.swing.JTextField NM_Four;
    private javax.swing.JTextField NM_One;
    private javax.swing.JTextField NM_Three;
    private javax.swing.JTextField NM_Two;
    private javax.swing.JTextField Networks;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables


    /**
     *
     * @param a
     */
    public static void read(String a[])
    {
        final JTextArea edit = new JTextArea(30, 60);
        edit.setText("one\ntwo\nthree");
        edit.append("\nfour\nfive");

        JButton read = new JButton("TextAreaLoad.txt");
        read.addActionListener( new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                try
                {
                    FileReader reader = new FileReader( "TextAreaLoad.txt" );
                    BufferedReader br = new BufferedReader(reader);
                    edit.read( br, null );
                    br.close();
                    edit.requestFocus();
                }
                catch(Exception e2) { System.out.println(e2); }
            }
        });

        JButton write = new JButton("Write TextAreaLoad.txt");
        write.addActionListener( new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
                try
                {
                    FileWriter writer = new FileWriter( "TextAreaLoad.txt" );
                    BufferedWriter bw = new BufferedWriter( writer );
                    edit.write( bw );
                    bw.close();
                    edit.setText("");
                    edit.requestFocus();
                }
                catch(Exception e2) {}
            }
        });

        JFrame frame = new JFrame("TextArea Load");
        frame.getContentPane().add( new JScrollPane(edit), BorderLayout.NORTH );
        frame.getContentPane().add(read, BorderLayout.WEST);
        frame.getContentPane().add(write, BorderLayout.EAST);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setLocationRelativeTo( null );
        frame.setVisible(true);
    }
}
